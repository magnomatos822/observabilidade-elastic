
version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - xpack.encryptedSavedObjects.encryptionKey=411bddf21262f563cd31f255572834ec
      - xpack.reporting.encryptionKey=e38d2a334b4650548c9230b349753545
      - xpack.security.encryptionKey=992e0ce17c180880e9c751fbd4e36576
      # - xpack.security.authc.api_key.enabled=true
      # - ELASTIC_PASSWORD= TGF@bxh4uqe1zvf0hqk
      # - ELASTIC_USERNAME= elastic
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
    ulimits: 
      memlock:
        soft: -1 
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add: 
      - IPC_LOCK
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks: 
      - observability
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.3.3
    restart: always
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks: 
      - observability
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
  #   container_name: elasticsearch
  #   environment:
  #     - node.name=elasticsearch
  #     - cluster.name=es-docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin="*"
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - ./elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks: 
  #       - observability
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.3.3
  #   container_name: kibana
  #   ports:
  #     - 5601:5601
  #   volumes:
  #     - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  #   environment:
  #     ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #   networks: 
  #       - observability

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.3.3
    container_name: metricbeat
    user: root
    volumes:      
      - /var/run/docker.sock:/var/run/docker.sock
      - ./beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    restart: on-failure
    networks: 
      - observability

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:8.3.3
    container_name: heartbeat
    volumes:      
    - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    environment: 
    - setup.kibana.host=kibana:5601
    networks: 
      - observability

  apm:
    image: docker.elastic.co/apm/apm-server:8.3.3
    container_name: apm
    volumes:      
    - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports:
      - "8200:8200"
    restart: on-failure
    networks: 
      - observability

networks:
  observability:
    external: true